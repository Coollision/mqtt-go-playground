name: build artifacts and create + push docker image

on:
  push:
    branches:
      - 'master'
    tags:
      - '*'
  workflow_dispatch:

env:
  REGISTRY_IMAGE: ghcr.io/coollision/mqtt-go-playground

jobs:
  go-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Go Binary
        run: |
          PLATFORM="${{ matrix.platform }}"
          OS=$(echo "$PLATFORM" | cut -d'/' -f1)
          ARCH=$(echo "$PLATFORM" | cut -d'/' -f2)
          GOOS=$OS GOARCH=$ARCH go build -v -tags "" -ldflags="-X main.version=${{ github.ref_name }}" -o binaries/${{ matrix.platform }}/mqtt-go-playground ./main.go

      - name: Upload Go binaries
        id: build_artifacts
        run: |
          # Replace slashes in the artifact name with underscores
          ARTIFACT_NAME="mqtt-go-playground-${{ matrix.platform }}"
          ARTIFACT_NAME=${ARTIFACT_NAME//\//_}  # Replace / with _
          
          echo "Uploading artifact: $ARTIFACT_NAME"
          echo "artifact_name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build_artifacts.outputs.artifact_name }}
          path: binaries/${{ matrix.platform }}/mqtt-go-playground
          if-no-files-found: 'error'

  docker-build:
    runs-on: ubuntu-latest
    needs: go-build
    permissions:
      contents: read
      packages: write
    env:
      PLATFORMS: linux/amd64,linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}
          install: true
          driver: docker-container

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Go Binary Artifacts
        uses: actions/download-artifact@v4
        with:
          name: mqtt-go-playground-linux_amd64
          path: ./binaries/linux/amd64

      - name: Download Go Binary Artifacts
        uses: actions/download-artifact@v4
        with:
          name: mqtt-go-playground-linux_arm64
          path: ./binaries/linux/arm64

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile-gh-action
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: |
            ghcr.io/coollision/mqtt-go-playground:latest,
            ghcr.io/coollision/mqtt-go-playground:${{ github.ref_name }},
            ghcr.io/coollision/mqtt-go-playground:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
